<h1 id="week-08">Week 08</h1>
<p>The Week 08 Assignment:</p>
<ul>
<li><a href="http://elvenware.com/charlie/books/CloudNotes/Prog282/Week08-Assignment.html">http://elvenware.com/charlie/books/CloudNotes/Prog282/Week08-Assignment.html</a></li>
</ul>
<h2 id="major-topics">Major Topics</h2>
<ul>
<li>CouchDb, JSON and Attachments</li>
<li>Nano: The API for talking from Node to CouchDb</li>
<li>Design Document, Views and CouchDb</li>
<li>HandleBars</li>
<li>Ajax</li>
</ul>
<p>One of the most important samples is JsObjects/HtmlCssJavaScript/UnitTestCouchDb01.</p>
<ul>
<li><a href="https://github.com/charliecalvert/JsObjects/tree/master/HtmlCssJavascript/UnitTestCouchDb01">https://github.com/charliecalvert/JsObjects/tree/master/HtmlCssJavascript/UnitTestCouchDb01</a></li>
</ul>
<p>It shows how to read and write complex data from CouchDb. Right now, despite what I said on Wednesday, I'm not using QueryString in most cases.</p>
<h2 id="important-links">Important Links</h2>
<ul>
<li><a href="http://www.elvenware.com/charlie/development/database/NoSql/CouchDb.html">Elvenware CouchDb</a></li>
<li><a href="http://www.elvenware.com/charlie/development/web/JavaScript/NodeJs.html">Elvenware Node</a></li>
<li><a href="http://www.elvenware.com/charlie/development/web/JavaScript/JQueryBasic.html">Elvenware jQuery</a></li>
<li><a href="http://www.elvenware.com/charlie/development/web/JavaScript/Basics.html">Elvenware JavaScript</a></li>
<li><a href="https://github.com/dscape/nano">The Nano API</a></li>
<li><a href="http://couchdb.apache.org/">CouchDb</a></li>
<li><a href="http://handlebarsjs.com/">HandleBars</a></li>
</ul>
<p>Here is a core topic you are likely to wrestle with:</p>
<ul>
<li><a href="http://www.elvenware.com/charlie/development/database/NoSql/CouchDb.html#error-document-update-conflict">Insert JSON into CouchDb</a></li>
</ul>
<h2 id="merging-git-files">Merging Git Files:</h2>
<ul>
<li><a href="http://elvenware.com/charlie/development/cloud/Git.html#merging-code">http://elvenware.com/charlie/development/cloud/Git.html#merging-code</a></li>
</ul>
<h2 id="couchdb-attachments">CouchDb Attachments</h2>
<p>We often want to add attachments such as an HTML document or image file to our CouchDb database.</p>
<p><a href="http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments">http://wiki.apache.org/couchdb/HTTP_Document_API#Attachments</a></p>
<pre><code>app.get(&quot;/attachHtml&quot;, function(request, response) {&#39;use strict&#39;;
   console.log(&#39;/attachHtml called&#39;);
   
   var fs = require(&#39;fs&#39;);

    fs.readFile(__dirname + &#39;/Templates/Basic.html&#39;, function(err, data) {
        if (!err) {
            var prog = nano.db.use(dbName);
            prog.attachment.insert(&#39;basic&#39;, &#39;basic.html&#39;, data, &#39;text/html&#39;,
                function(err1, body) {
                if (!err1) {
                    console.log(body);
                } else {
                    console.log(err1);
                    response.send(500, err1);
                }
            });
        } else {
            console.log(err);
            response.send(500, err);
        }
    }); 
});</code></pre>
<h2 id="sending-back-express-and-nano-errors">Sending Back Express and Nano Errors</h2>
<p>Send a 500 (Internal Server Error) HTTP Error code:</p>
<pre><code>    function(err, body) {
        if (!err) {
            console.log(body);
            response.send(body);
        } else {
            var cscMessage = &quot;No such record as: &quot; + request.query.docName +
                &quot;. Use a the Get Doc Names button to find &quot; +
                &quot;the name of an existing document.&quot;
            err.p282special = cscMessage;
            response.send(500, err);
        }
    }</code></pre>
<p>All that needs to be done is send the error code as the first parameter to response.send:</p>
<pre><code>response.send(500, err);</code></pre>
<p>Here is more information on HTTP code. As you can see, some are error codes, some -- such as 200 -- signify success. Your code (and many other tools) can decide what to do with an HTTP message depending on the code that is send with it:</p>
<p>Note also that I am adding a special field onto the error message. This allows me to send back custom error messages along with any details generated by the Nano error message system.</p>
<p>One the client side we do this:</p>
<pre><code>    var create = function() {
        $.ajax({
            type : &#39;GET&#39;,
            url : &#39;/create&#39;,
            dataType : &#39;json&#39;,
            success : function(data) {
                showDebug(data.Result);
            },
            error : showNanoError
        });
    };

    var showNanoError = function(request, ajaxOptions, thrownError) {
        var responseText = JSON.parse(request.responseText);
        if (typeof responseText.p282special !== &#39;undefined&#39;) {
            showDebug(responseText.p282special);
        }
        showDebug(responseText.message);
        showError(request, ajaxOptions, thrownError);
    };</code></pre>
<p>Notice that I have create a special error handler for this kind of message. By sending back a 500 HTTP Error Code we ensure that our error handler will be called. The <strong>showNanoError</strong> has special processing for Nano messages, then we pass the whole error onto our regular Prog282 error handler. As you recall, it looks like this:</p>
<pre><code>    var showError = function(request, ajaxOptions, thrownError) {
        showDebug(&quot;Error occurred: = &quot; + ajaxOptions + &quot; &quot; + thrownError);
        showDebug(request.status);
        showDebug(request.statusText);
        showDebug(request.getAllResponseHeaders());
        showDebug(request.responseText);
    };</code></pre>
<p>Clear there are ways to streamline this process, but even if it is overkill, it is nonetheless likely to give you good error support during the development process.</p>
<h2 id="constants">Constants</h2>
<p>JsObjects/JavaScript/Properties/Constants01</p>
<h2 id="couchapp-pages">CouchApp Pages</h2>
<p>http://couchapp.org/page/pages-install https://github.com/couchapp/couchapp</p>
<p>ez_setup.py distribute_setup.py set VS90COMNTOOLS=%VS110COMNTOOLS% python-2.7.5.msi pywin32-218.win32-py2.7.exe py2exe-0.6.9.win32-py2.7.exe</p>
<p>couchapp init<br />couchapp push . http://localhost:5984/pages</p>
<h2 id="erica">Erica</h2>
<p>Here:</p>
<pre><code>&lt;http://elvenware.com/charlie/development/database/NoSql/CouchDb.html#erica&gt;</code></pre>
<h2 id="git-merge">Git Merge</h2>
<ul>
<li><a href="http://elvenware.com/charlie/development/cloud/Git.html#merging-code">http://elvenware.com/charlie/development/cloud/Git.html#merging-code</a></li>
</ul>
